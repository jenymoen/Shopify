{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "range",
      "id": "logo_width",
      "min": 50,
      "max": 250,
      "step": 10,
      "unit": "px",
      "label": "Logo width",
      "default": 100
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu",
      "default": "main-menu"
    },
    {
      "type": "checkbox",
      "id": "show_search",
      "label": "Show search",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "sticky_header",
      "label": "Sticky header",
      "default": true
    }
  ]
}
{% endschema %}

<header class="header {% if section.settings.sticky_header %}header--sticky{% endif %}">
  <div class="header__wrapper container-{{ settings.container_width }}">
    <div class="header__left">
      <button type="button" class="header__menu-toggle" aria-expanded="false">
        <span class="visually-hidden">Menu</span>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 12H21M3 6H21M3 18H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </button>
    </div>

    <div class="header__logo">
      <a href="/" class="header__logo-link">
        {% if section.settings.logo != blank %}
          {{ section.settings.logo | image_url: width: section.settings.logo_width | image_tag:
            class: 'header__logo-image',
            widths: '50, 100, 150, 200, 250',
            height: section.settings.logo_width | divided_by: 2,
            width: section.settings.logo_width,
            alt: shop.name
          }}
        {% else %}
          <span class="header__logo-text h4">{{ shop.name }}</span>
        {% endif %}
      </a>
    </div>

    <nav class="header__nav" role="navigation">
      <ul class="header__menu list-unstyled">
        {% for link in section.settings.menu.links %}
          <li class="header__menu-item{% if link.links.size > 0 %} header__menu-item--has-submenu{% endif %}">
            <a href="{{ link.url }}" class="header__menu-link{% if link.active %} header__menu-link--active{% endif %}">
              {{ link.title }}
              {% if link.links.size > 0 %}
                <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M2 4L6 8L10 4" stroke="currentColor" stroke-width="1.5"/>
                </svg>
              {% endif %}
            </a>
            {% if link.links.size > 0 %}
              <ul class="header__submenu list-unstyled">
                {% for childlink in link.links %}
                  <li class="header__submenu-item">
                    <a href="{{ childlink.url }}" class="header__submenu-link{% if childlink.active %} header__submenu-link--active{% endif %}">
                      {{ childlink.title }}
                    </a>
                  </li>
                {% endfor %}
              </ul>
            {% endif %}
          </li>
        {% endfor %}
      </ul>
    </nav>

    <div class="header__right">
      {% if section.settings.show_search %}
        <button type="button" class="header__search-toggle" aria-expanded="false">
          <span class="visually-hidden">Search</span>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M21 21L16.5 16.5M16.5 16.5C18.1569 14.8431 19 12.6569 19 10C19 4.47715 14.5228 0 9 0C3.47715 0 -1 4.47715 -1 10C-1 15.5228 3.47715 20 9 20C11.6569 20 13.8431 19.1569 15.5 17.5L16.5 16.5Z" stroke="currentColor" stroke-width="2"/>
          </svg>
        </button>
        
        <div class="header__search" hidden>
          <div class="header__search-container container-{{ settings.container_width }}">
            <form action="/search" method="get" role="search" class="header__search-form">
              <input type="search" name="q" placeholder="Search..." class="header__search-input">
              <button type="submit" class="header__search-submit">
                <span class="visually-hidden">Search</span>
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M21 21L16.5 16.5M16.5 16.5C18.1569 14.8431 19 12.6569 19 10C19 4.47715 14.5228 0 9 0C3.47715 0 -1 4.47715 -1 10C-1 15.5228 3.47715 20 9 20C11.6569 20 13.8431 19.1569 15.5 17.5L16.5 16.5Z" stroke="currentColor" stroke-width="2"/>
                </svg>
              </button>
            </form>
            <button type="button" class="header__search-close">
              <span class="visually-hidden">Close</span>
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
              </svg>
            </button>
          </div>
        </div>
      {% endif %}

      <a href="/cart" class="header__cart">
        <span class="visually-hidden">Cart</span>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M4 4H20L18 14H6L4 4Z" stroke="currentColor" stroke-width="2"/>
          <circle cx="9" cy="19" r="2" stroke="currentColor" stroke-width="2"/>
          <circle cx="15" cy="19" r="2" stroke="currentColor" stroke-width="2"/>
        </svg>
        <span class="header__cart-count cart-count">{{ cart.item_count }}</span>
      </a>
    </div>
  </div>
</header>

{% stylesheet %}
.header {
  background: #ffffff;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 100;
}

.header--sticky {
  position: sticky;
  top: 0;
}

.header__wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.header__left,
.header__right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.header__menu-toggle {
  display: none;
  background: none;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
}

.header__logo {
  margin: 0 2rem;
}

.header__logo-link {
  display: block;
  text-decoration: none;
  color: inherit;
}

.header__logo-text {
  margin: 0;
  font-size: 1.5rem;
}

.header__menu {
  display: flex;
  gap: 2rem;
  margin: 0;
  padding: 0;
}

.header__menu-item {
  position: relative;
}

.header__menu-link {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  text-decoration: none;
  color: inherit;
  padding: 0.5rem 0;
}

.header__menu-link--active {
  font-weight: bold;
}

.header__submenu {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 200px;
  background: #ffffff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 0.5rem 0;
  margin: 0;
}

.header__menu-item--has-submenu:hover .header__submenu {
  display: block;
}

.header__submenu-link {
  display: block;
  padding: 0.5rem 1rem;
  text-decoration: none;
  color: inherit;
}

.header__submenu-link:hover {
  background: rgba(0, 0, 0, 0.05);
}

.header__search-toggle,
.header__search-submit,
.header__search-close {
  background: none;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
}

.header__search {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  background: #ffffff;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  padding: 1rem 0;
}

.header__search-container {
  position: relative;
}

.header__search-form {
  display: flex;
  gap: 1rem;
}

.header__search-input {
  flex: 1;
  padding: 0.5rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 4px;
}

.header__search-close {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
}

.header__cart {
  position: relative;
  text-decoration: none;
  color: inherit;
  padding: 0.5rem;
}

.header__cart-count {
  position: absolute;
  top: 0;
  right: 0;
  background: var(--accent-color);
  color: #ffffff;
  font-size: 0.75rem;
  padding: 0.125rem 0.375rem;
  border-radius: 1rem;
  transform: translate(50%, -50%);
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@media screen and (max-width: 768px) {
  .header__menu-toggle {
    display: block;
  }

  .header__nav {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    background: #ffffff;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
  }

  .header__nav.is-active {
    display: block;
  }

  .header__menu {
    flex-direction: column;
    gap: 0;
  }

  .header__menu-link {
    padding: 1rem;
  }

  .header__submenu {
    position: static;
    box-shadow: none;
    padding-left: 2rem;
  }

  .header__menu-item--has-submenu:hover .header__submenu {
    display: none;
  }

  .header__menu-item--has-submenu.is-active .header__submenu {
    display: block;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  // Mobile menu toggle
  const menuToggle = document.querySelector('.header__menu-toggle');
  const nav = document.querySelector('.header__nav');
  
  if (menuToggle && nav) {
    menuToggle.addEventListener('click', function() {
      const isExpanded = this.getAttribute('aria-expanded') === 'true';
      this.setAttribute('aria-expanded', !isExpanded);
      nav.classList.toggle('is-active');
    });
  }

  // Search toggle
  const searchToggle = document.querySelector('.header__search-toggle');
  const searchContainer = document.querySelector('.header__search');
  const searchClose = document.querySelector('.header__search-close');
  
  if (searchToggle && searchContainer && searchClose) {
    searchToggle.addEventListener('click', function() {
      const isExpanded = this.getAttribute('aria-expanded') === 'true';
      this.setAttribute('aria-expanded', !isExpanded);
      searchContainer.hidden = isExpanded;
      
      if (!isExpanded) {
        searchContainer.querySelector('input').focus();
      }
    });
    
    searchClose.addEventListener('click', function() {
      searchToggle.setAttribute('aria-expanded', 'false');
      searchContainer.hidden = true;
    });
  }

  // Mobile submenu toggle
  const submenuItems = document.querySelectorAll('.header__menu-item--has-submenu');
  
  submenuItems.forEach(item => {
    const link = item.querySelector('.header__menu-link');
    
    if (link) {
      link.addEventListener('click', function(e) {
        if (window.innerWidth <= 768) {
          e.preventDefault();
          item.classList.toggle('is-active');
        }
      });
    }
  });
});
{% endjavascript %} 